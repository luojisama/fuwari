---
const STEAM_ID = import.meta.env.STEAM_USER_ID;
const API_KEY = import.meta.env.STEAM_API_KEY;

let playerData = null;
let fallbackHtml = '';

try {
  const response = await fetch(`https://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?key=${API_KEY}&steamids=${STEAM_ID}`);
  
  if (!response.ok) throw new Error('API请求失败');
  
  const data = await response.json();
  playerData = data.response.players[0];
  
} catch (error) {
  // 回退到iframe方案
  const widgetResponse = await fetch(`https://store.steampowered.com/widget/${STEAM_ID}/`);
  fallbackHtml = await widgetResponse.text();
}
---

{playerData ? (
  <div class="steam-status">
    <div class="flex items-center gap-4 mb-4">
      <img 
        src={playerData.avatarfull} 
        alt="Steam 头像"
        width="64"
        height="64"
        class="rounded-full border-2 border-[var(--theme-text-accent)]"
      />
      <div>
        <h3 class="text-lg font-semibold">{playerData.personaname}</h3>
        <div class="flex items-center gap-2">
          <span class={`w-3 h-3 rounded-full ${playerData.personastate === 1 ? 'bg-green-500' : 'bg-gray-500'}`}></span>
          <span>{playerData.personastate === 1 ? '在线' : '离线'}</span>
        </div>
      </div>
    </div>
    
    {playerData.gameextrainfo && (
      <div class="bg-[var(--theme-bg)] p-3 rounded-lg">
        <p class="text-sm flex items-center gap-2">
          <span class="text-[var(--theme-text-accent)]">▶</span>
          {playerData.gameextrainfo}
        </p>
      </div>
    )}
  </div>
) : (
  <div class="steam-fallback" set:html={fallbackHtml} />
)}

<style>
  .steam-status {
    color: var(--theme-text);
  }
  
  .steam-fallback iframe {
    width: 100% !important;
    height: 190px !important;
    border: none !important;
  }
</style>